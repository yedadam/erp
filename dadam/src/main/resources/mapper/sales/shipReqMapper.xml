<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadam.sales.shipreq.mapper.ShipreqMapper">

	<select id="findShipreqList" resultType="com.dadam.sales.shipreq.service.ShipReqVO">
		SELECT
		SHIP_REQ_CODE,
		VDR_CODE,
		getvdrname(vdr_code) VDR_NAME,
		CREATED_DATE,
		SHIP_EXP_DATE,
		STATUS,
		EMP_ID,
		UPDATE_DATE,
		UPDATE_ID,
		TOT_PRICE,
		COM_ID,
		ORD_CODE
		FROM shiprequest
		WHERE com_id=#{comId}
		<choose>
			<when test="'shipReqCode'.equals(type)">
				AND ship_req_code LIKE '%'||#{value}||'%'
			</when>
			<when test="'vdrName'.equals(type)">
				AND getvdrname(vdr_code) LIKE '%' || #{value} || '%'
			</when>
			<when test="'ordCode'.equals(type)">
				AND ord_code LIKE '%' || #{value} || '%'
			</when>
			<when test="'vdrCode'.equals(type)">
				AND vdr_code LIKE '%' || #{value} || '%'
			</when>
		</choose>
		<if test="shipExpStartDate != null and shipExpStartDate != '' ">
			AND trunc(ship_exp_date) >=TO_DATE(#{shipExpStartDate},'yyyy-MM-dd')
		</if>
		<if test="shipExpEndDate != null and shipExpEndDate !='' ">
		  <![CDATA[
			AND trunc(ship_exp_date) <= TO_DATE(#{shipExpEndDate},'yyyy-MM-dd')
		    ]]>
		</if>
		<if test="status != null and status !=  ''">
		 <![CDATA[
			AND status=#{status}
			]]>
		</if>
		order by ship_req_code desc
	</select>
	

	<select id="findShipreqDtlList"
		resultType="com.dadam.sales.shipreq.service.ShipReqDtlVO">
		SELECT
		sd.ship_req_dtl_code,
		s.VDR_CODE,
		getvdrname(s.vdr_code) VDR_NAME,
		getitemname(sd.item_code)name,
		getitemprice(sd.item_code) price,
		sd.quantity quantity,
		getitemprice(sd.item_code) * sd.quantity
		supPrice,
		getitemprice(sd.item_code) * sd.quantity/10 vatPrice,
		(getitemprice(sd.item_code) * sd.quantity + getitemprice(sd.item_code)
		*
		sd.quantity/10)*v.discount/100 discPrice,
		(getitemprice(sd.item_code)
		* sd.quantity+getitemprice(sd.item_code) *
		sd.quantity/10)*(1-v.discount/100) totPrice,
		sd.STATUS,
		s.COM_ID
		FROM
		shiprequest s JOIN shiprequestdetail sd ON
		(sd.ship_req_code=s.ship_req_code and sd.com_id=s.com_id)
		JOIN vender v ON (s.vdr_code=v.vdr_code and s.com_id=v.com_id)
		WHERE s.ship_req_code=#{shipReqCode} AND s.com_id=#{comId}
		order by
		sd.ship_req_dtl_code
	</select>
	<insert id="insertShipreqHead"
		parameterType="com.dadam.sales.shipreq.service.ShipReqVO">
		<selectKey resultType="string" keyProperty="shipReqCode"
			order="BEFORE">
			SELECT 'sr-' || TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(ship_req_code, 4))), 100)
			+ 1)
			FROM shiprequest
		</selectKey>
		INSERT INTO shiprequest (
		SHIP_REQ_CODE,
		VDR_CODE,
		CREATED_DATE,
		SHIP_EXP_DATE,
		STATUS,
		EMP_ID,
		UPDATE_DATE,
		UPDATE_ID,
		TOT_PRICE,
		COM_ID,
		ORD_CODE
		) VALUES (
		#{shipReqCode},
		#{vdrCode},
		SYSDATE,
		#{shipExpDate},
		'srq01',
		#{empId},
		SYSDATE,
		#{updateId},
		#{totPrice},
		#{comId},
		#{ordCode}
		)
	</insert>
	<insert id="insertShipreqDtl"
		parameterType="com.dadam.sales.shipreq.service.ShipReqDtlVO">
		<selectKey resultType="string" keyProperty="shipReqDtlCode"
			order="BEFORE">
			SELECT 'srd-' || TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(ship_req_dtl_code, 5))),
			100) + 1)
			FROM shiprequestdetail
		</selectKey>
		INSERT INTO shiprequestdetail (
		ship_req_dtl_code,
		ITEM_CODE,
		STATUS,
		QUANTITY,
		TOT_PRICE,
		COM_ID,
		SHIP_REQ_CODE,
		DLIVE_DATE
		) VALUES (
		#{shipReqDtlCode},
		#{itemCode},
		'srd01',
		#{quantity},
		#{totPrice},
		#{comId},
		#{shipReqCode},
		#{dliveDate}
		)
	</insert>
	<update id="updateStatusByordNo">
		UPDATE orders
		SET status='ost02'
		WHERE ord_code=#{ordCode}
		AND com_id=#{comId}
	</update>
	<!-- 납기일자 변경하기 -->
	<update id="updateShiPExpDate"
		parameterType="com.dadam.sales.shipreq.service.ShipReqVO">
		UPDATE shiprequest
		SET ship_exp_date= #{shipExpDate}
		WHERE ship_req_code= #{shipReqCode}
		AND com_id=#{comId}
	</update>
	<!-- 주문상태 값 바꾸기 -->
	<update id="updateOrdStatus">
		update orders
		SET status='ost01'
		WHERE ord_code=#{ordCode}
		AND com_id=#{comId}
	</update>
	<!-- 출하헤더 삭제시 출하디테일삭제 -->
	<delete id="deleteShipreqDtl">
		delete shiprequestdetail
		where ship_req_code=#{shipReqCode}
		AND com_id=#{comId}
	</delete>
	<!-- 출하헤더삭제 -->
	<delete id="deleteShipreqHead">
		delete shiprequest
		where ship_req_code=#{shipReqCode}
		AND com_id=#{comId}
	</delete>
	<!-- 출하 디테일 단건삭제 -->
	<delete id="deleteShipReqDtlBydtlno">
		delete shiprequestdetail
		where ship_req_code=#{shipReqDtlCode}
		AND com_id=#{comId}
	</delete>

</mapper>