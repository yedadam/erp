<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadam.acc.account.mapper.ChitMapper">
	 <!-- , getVdrName(c.vdr_code) as vdrCode 
	 			 , '' vdrCode -->
	<!-- 전표 리스트 출력 컬럼 날짜, 전표명, 계정과목, 거래처, 금액, 세금계산서 발행유무, 처리상태, 구분, 등록부서, 처리자,승인자,비고 -->
	<select id="chitFindAll" resultType="ChitVO"
		parameterType="string">
   SELECT
    c.created_date AS createdDate,
    c.chit_title AS chitTitle,
    '' AS parent,
    c.chit_code AS chitCode,
    getVdrName((SELECT vdr_code FROM orders WHERE ord_code = article_code)) AS vdrCode,
    article_code,
    c.supply_price AS supplyPrice,
    c.vat_price AS vatPrice,
    c.tot_price AS totPrice,
    0 AS iPrice,
    c.tax_code AS taxCode,
    getSubCode(c.status) AS status,
    getSubCode(c.type) AS tType,
    getDeptName(c.dept_code) AS deptCode,
    getEmpName(c.phy_emp_id,#{comId}) AS phyEmpId,
    getEmpName(c.appr_emp_id,#{comId}) AS apprEmpId,
    c.note AS note,
    '' AS acctCode,
    '' AS iType,
    '' AS iName,
    '' AS aName
  FROM chit c
  WHERE com_id = #{comId}

  UNION ALL

  SELECT
    i.created_date AS createdDate,
    '' AS chitTitle,
    i.chit_code AS parent,
    i.chit_dt_id AS chitCode,
    '' AS vdrCode,
    '' AS article_code,
    0 AS supplyPrice,
    0 AS vatPrice,
    0 AS totPrice,
    i.price AS iPrice,
    '' AS taxCode,
    '' AS status,
    '' AS tType,
    '' AS deptCode,
    '' AS phyEmpId,
    '' AS apprEmpId,
    i.note AS note,
    i.acct_code AS acctCode,
    i.type AS iType,
    getSubCode(i.type) AS iName,
    a.name AS aName
  FROM indignation i
  LEFT JOIN account a ON i.acct_code = a.acct_code
  WHERE i.com_id = #{comId}
	</select>

	<select id="acctCodeFindByCode" resultType="map">
	  SELECT acct_code as acctCode, name as aname
		FROM account
	   WHERE com_id = #{comId}
		AND acct_yn = 'Y'
		AND (acct_code LIKE #{keyword} || '%'
		OR name LIKE '%' || #{keyword} || '%')
		ORDER BY acct_code
	</select>

	<select id="indTypeFindByCode" resultType="map">
		SELECT SUBSTR(sub_code, -2) AS iType, sub_name AS iName
		FROM subcodes
		WHERE com_id = #{comId}
		AND main_code = 'itp'
		AND (sub_code LIKE '%' || #{keyword} || '%'
		OR sub_name LIKE '%' || #{keyword} || '%')
		ORDER BY sub_code
	</select>
	
	<select id="chtTypeFindByCode" resultType="map">
		SELECT SUBSTR(sub_code, -2) AS tType, sub_name AS tName
		FROM subcodes
		WHERE com_id = #{comId}
		AND main_code = 'cht'
		AND (sub_code LIKE '%' || #{keyword} || '%'
		OR sub_name LIKE '%' || #{keyword} || '%')
		ORDER BY sub_code
	</select>


<select id="getStatusByChitCode" resultType="String">
  SELECT status 
    FROM chit 
   WHERE chit_code = #{chitCode}
     AND com_id= #{comId}
</select>


	<insert id="insert" parameterType="ChitVO"  >
		<selectKey resultType="string" keyProperty="chitDtId"
			order="BEFORE">
			SELECT 'chdt-' ||
			(NVL(MAX(TO_NUMBER(SUBSTR(chit_dt_id,6))),100)+1) chitDtId
			FROM indignation
			WHERE com_id = #{comId}
		</selectKey>
   INSERT INTO indignation (
		  chit_dt_id
		, chit_code
		, acct_code
		, type
		, price
		, created_date
		, com_id)
   VALUES (
		  #{chitDtId}
		, #{chitCode}
		, #{acctCode}
		, #{iType}
		, #{iPrice}
		, SYSDATE
		, #{comId}
		)
	</insert>

	<update id="update" parameterType="ChitVO">
		UPDATE chit
		SET 
		  phy_emp_id = {empId}
		, status = 'cst02'
		, note = #{note}
		, update_date = SYSDATE
		WHERE chit_code = #{chitCode}
		  AND com_id= #{comId}
	</update>


	<delete id="delete" parameterType="ChitVO">
	   DELETE FROM indignation
		WHERE chit_dt_id = #{chitDtId}
		  AND com_id= #{comId}
	</delete>



<update id="modifySta" parameterType="string">
UPDATE chit
   SET status = 'cst04'
     , update_date = SYSDATE
 WHERE chit_code = #{chitCode}
   AND com_id= #{comId}
</update>


<update id="modifyVarBal" parameterType="map">
    UPDATE vender
       SET credit_bal_price = credit_bal_price + #{totPrice}
     WHERE com_id= #{comId}
       AND vdr_code = (
           SELECT vdr_code
             FROM orders
            WHERE ord_code = #{articleCode}
     		)
</update>
 
<select id="getTtypeByChitCode" resultType="String">
  SELECT type 
    FROM chit 
   WHERE chit_code = #{chitCode}
     AND com_id= #{comId}
</select>


<!-- 전체 조회 -->
<select id="selectAutoChitRules" parameterType="string" resultType="ChitVO">
  SELECT
    rule_id,
    (SELECT sub_name FROM subcodes WHERE sub_code = r.chit_type) chitType,
    (SELECT sub_name FROM subcodes WHERE sub_code = r.itp_type) itpType,
    (SELECT name FROM account a WHERE a.acct_code = r.acct_code) acctCode,
    com_id,
    created_date,
    update_date
  FROM auto_chit_rule r
  WHERE com_id = #{comId}
  ORDER BY chit_type, itp_type
</select>

<insert id="mergeAutoChitRule" parameterType="ChitVO">
MERGE INTO auto_chit_rule r
USING (
    SELECT
        #{chitType} AS chit_type,
        #{itpType} AS itp_type,
        #{acctCode} AS acct_code,
        #{comId} AS com_id
    FROM dual
) src
ON (
    r.chit_type = src.chit_type
    AND r.itp_type = src.itp_type
    AND r.acct_code = src.acct_code
    AND r.com_id = src.com_id
)
WHEN MATCHED THEN
    UPDATE SET
        acct_code = src.acct_code -- 필요시 다른 필드도 수정 가능
WHEN NOT MATCHED THEN
    INSERT (rule_id, chit_type, itp_type, acct_code, com_id)
    VALUES (
        (SELECT 'rule' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(rule_id, 5))), 0) + 1, 2, '0') 
         FROM auto_chit_rule WHERE com_id = #{comId}),
        src.chit_type,
        src.itp_type,
        src.acct_code,
        src.com_id
    )

</insert>

<delete id="deleteAutoRule">
  DELETE FROM auto_chit_rule
  WHERE rule_id = #{ruleId}
</delete>


<select id="getNextRuleId" resultType="string">
  SELECT 'rule' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(rule_id, 5))), 0) + 1, 2, '0') 
  FROM auto_chit_rule WHERE com_id = #{comId}
</select>

<select id="findTypeCodeByName" resultType="string">
  SELECT sub_code FROM subcodes WHERE sub_name = #{name} and main_code = 'cht'
</select>

<select id="findIndTypeCodeByName" resultType="string">
  SELECT sub_code FROM subcodes WHERE sub_name = #{name} and main_code = 'ind'
</select>

<select id="findAcctCodeByName" resultType="string">
  SELECT ACCT_CODE FROM account WHERE name = #{name}
</select>

<select id="selectAutoRules" resultType="map">
  SELECT chit_type, itp_type, acct_code, vat_yn,
  (SELECT name FROM account a WHERE a.acct_code = r.acct_code) AS ANAME,
  (SELECT sub_name FROM subcodes s WHERE s.sub_code = r.itp_type) AS INAME
  FROM auto_chit_rule r
  WHERE chit_type = (SELECT sub_code FROM subcodes WHERE sub_name = #{chitType} AND main_code = 'cht') 
    AND com_id = #{comId}
  ORDER BY itp_type
</select>


</mapper>