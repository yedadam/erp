<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadam.hr.attendance.mapper.AttendanceMapper">

    <!--
        근태관리 Mapper(XML)
        - insertCheckIn: 출근 등록
        - updateCheckOut: 퇴근 처리
        - selectTodayAttendance: 오늘 근태 조회
        - existsCheckIn: 출근기록 중복 체크
        - selectAttendanceList: 근태 목록 조회 (권한별 필터링)
        - validateIp: IP 검증
        - validateGps: GPS 검증
        - getEmployeeTimeSettings: 사원별 출퇴근 시간 설정 조회
        - getRealtimeStatus: 실시간 출퇴근 현황 조회
        - getDeptAttendanceStats: 부서별 출퇴근 통계 조회
        - getLateEarlyStats: 지각/조퇴 통계 조회
    -->

    <!-- [출근 등록] 출근 정보 등록 -->
    <insert id="insertCheckIn" parameterType="map">
        INSERT INTO attendance (
            attendance_code, com_id, emp_id, work_date, standard_start_time, actual_start_time, 
            check_ip, gps_info, location_info, status, created_at
        ) VALUES (
            #{attendanceCode}, #{comId}, #{empId}, #{workDate}, #{standardStartTime}, #{actualStartTime}, 
            #{checkIp}, #{gpsInfo}, #{locationInfo}, #{status}, SYSDATE
        )
    </insert>

    <!-- [퇴근 처리] 퇴근 정보 업데이트 -->
    <update id="updateCheckOut" parameterType="map">
        UPDATE attendance
        SET actual_end_time = #{actualEndTime},
            standard_end_time = #{standardEndTime},
            overtime_hrs = #{overtimeHrs},
            updated_at = SYSDATE
        WHERE attendance_code = #{attendanceCode}
          AND com_id = #{comId}
    </update>

    <!-- [오늘 근태 조회] 당일 근태 정보 조회 -->
    <select id="selectTodayAttendance" parameterType="map" resultType="AttendanceVO">
        SELECT 
            a.*,
            getEmpName(a.emp_id, #{comId}) AS emp_name,
            getDeptName(a.dept_code) AS dept_name
        FROM attendance a
        WHERE a.emp_id = #{empId}
          AND a.work_date = #{workDate}
          AND a.com_id = #{comId}
    </select>

    <!-- [출근기록 존재여부] 출근기록 중복 체크 -->
    <select id="existsCheckIn" parameterType="map" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM attendance
        WHERE emp_id = #{empId}
          AND work_date = #{workDate}
          AND com_id = #{comId}
    </select>

    <!-- [근태 목록 조회] 기간별 근태 리스트 조회 (권한별 필터링) -->
    <select id="selectAttendanceList" parameterType="map" resultType="AttendanceVO">
        SELECT 
            a.*,
            getEmpName(a.emp_id, #{comId}) AS emp_name,
            getDeptName(a.dept_code) AS dept_name
        FROM attendance a
        <where>
            a.com_id = #{comId}
            <if test="empId != null and empId != ''">
                AND a.emp_id = #{empId}
            </if>
            <if test="deptCode != null and deptCode != ''">
                AND a.dept_code = #{deptCode}
            </if>
            <if test="fromDate != null and fromDate != ''">
                AND a.work_date >= #{fromDate}
            </if>
            <if test="toDate != null and toDate != ''">
                AND a.work_date &lt;= #{toDate}
            </if>
        </where>
        ORDER BY a.work_date DESC, a.emp_id
    </select>

    <!-- [IP 검증] 요청 IP가 허용된 IP인지 검증 -->
    <select id="validateIp" parameterType="map" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM ATTENDANCEALLOWEDIP ai
        WHERE ai.com_id = #{comId}
          AND ai.ip_address = #{requestIp}
          AND ai.acct_yn = 'Y'
    </select>

    <!-- [GPS 검증] GPS 정보가 허용된 범위인지 검증 -->
    <select id="validateGps" parameterType="map" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN 1 ELSE 0 END
        FROM attendance_location al
        WHERE al.com_id = #{comId}
          AND al.gps_range >= #{gpsInfo}
          AND al.acct_yn = 'Y'
    </select>

    <!-- [사원별 출퇴근 시간 설정 조회] 사원의 출퇴근 시간 설정 조회 -->
    <select id="getEmployeeTimeSettings" parameterType="map" resultType="map">
        SELECT 
            '09:00' as standard_start_time,
            '18:00' as standard_end_time
        FROM dual
    </select>

    <!-- [실시간 출퇴근 현황 조회] 현재 출퇴근 현황 조회 -->
    <select id="getRealtimeStatus" parameterType="map" resultType="AttendanceVO">
        SELECT 
            a.*,
            getEmpName(a.emp_id, #{comId}) AS emp_name,
            getDeptName(a.dept_code) AS dept_name,
            CASE 
                WHEN a.actual_start_time IS NULL THEN '미출근'
                WHEN a.actual_end_time IS NULL THEN '근무중'
                ELSE '퇴근'
            END AS status_text
        FROM attendance a
        WHERE a.com_id = #{comId}
          AND a.work_date = TO_CHAR(SYSDATE, 'YYYY-MM-DD')
        <if test="deptCode != null and deptCode != ''">
            AND a.dept_code = #{deptCode}
        </if>
        ORDER BY a.actual_start_time DESC
    </select>

    <!-- [부서별 출퇴근 통계 조회] 부서별 출퇴근 통계 -->
    <select id="getDeptAttendanceStats" parameterType="map" resultType="map">
        SELECT 
            COUNT(*) AS total_emp,
            COUNT(CASE WHEN actual_start_time IS NOT NULL THEN 1 END) AS checked_in,
            COUNT(CASE WHEN actual_end_time IS NOT NULL THEN 1 END) AS checked_out,
            COUNT(CASE WHEN status = 'LATE' THEN 1 END) AS late_count,
            COUNT(CASE WHEN status = 'EARLY' THEN 1 END) AS early_count
        FROM attendance a
        WHERE a.com_id = #{comId}
          AND a.work_date = #{workDate}
        <if test="deptCode != null and deptCode != ''">
            AND a.dept_code = #{deptCode}
        </if>
    </select>

    <!-- [지각/조퇴 통계 조회] 기간별 지각/조퇴 통계 -->
    <select id="getLateEarlyStats" parameterType="map" resultType="map">
        SELECT 
            COUNT(CASE WHEN status = 'LATE' THEN 1 END) AS late_count,
            COUNT(CASE WHEN status = 'EARLY' THEN 1 END) AS early_count,
            COUNT(CASE WHEN status = 'ABSENT' THEN 1 END) AS absent_count,
            COUNT(CASE WHEN overtime_hrs > 0 THEN 1 END) AS overtime_count,
            AVG(CASE WHEN overtime_hrs > 0 THEN overtime_hrs END) AS avg_overtime
        FROM attendance a
        WHERE a.com_id = #{comId}
          AND a.work_date BETWEEN #{fromDate} AND #{toDate}
        <if test="deptCode != null and deptCode != ''">
            AND a.dept_code = #{deptCode}
        </if>
    </select>

</mapper> 