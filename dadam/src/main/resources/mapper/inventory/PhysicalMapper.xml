<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadam.inventory.physical.mapper.PhysicalMapper">
	<!--실사 조회 -->
	<select id="selectPhysicalList" resultType="PhysicalVO" parameterType="String">
		SELECT  
				phy_code,
				wh_code,
				getwarehouseName(wh_code) wh_Name,
				wh_code,
				phy_emp_id,
				getempName(phy_emp_id, #{comId}) phyEmpName,
				appr_emp_id,
				getempName(appr_emp_id, #{comId}) apprEmpName,
				note,
				created_date,
				appr_date,
				com_id
		FROM physical
		WHERE com_id = #{comId}
		ORDER BY phy_code DESC
	</select>
	<!--실사상세 조회 -->
	<select id="selectPhysicalDetailList" resultType="PhysicalDetailVO" parameterType="PhysicalDetailVO">
		SELECT  
				phy_dtl_code,
				phy_code,
				item_code,
				getitemName(item_code) itemName,
				quantity,
				lot,
				loc_code,
				note,
				com_id
		FROM physicaldetail
		WHERE com_id=#{comId} AND phy_code = #{phyCode}
		ORDER BY phy_dtl_code DESC
	</select>
	<!-- insert physical -->
	<insert id="insertPhysical" parameterType="PhysicalVO">
		<selectKey resultType="string" keyProperty="phyCode" order="BEFORE">
			SELECT 'psc-' || (NVL(MAX(TO_NUMBER(SUBSTR(phy_code,5))),100)+1) phyCode
			FROM physical
		</selectKey>
	INSERT INTO physical(
						phy_code,
	                    wh_code,
	                    phy_emp_id,
	                    created_date,
	                    note,
	                    com_id)
	VALUES(         
						#{phyCode},
	                    #{whCode},
	                    #{empId},
	                    sysdate,
	                    #{note},
	                    #{comId})
	</insert>
	<!-- insert physicalDetail -->
	<select id="selectPhysicalDetailKey" resultType="string">
		SELECT 'pscd-' || (NVL(MAX(TO_NUMBER(SUBSTR(phy_dtl_code,6))),100)+1) phyDtlCode
		FROM physicaldetail
	</select>
	<insert id="insertPhysicalDetail" parameterType="PhysicalDetailVO">
	INSERT INTO physicaldetail(
						phy_dtl_code,
                        phy_code,
                        lot,
                        item_code,
                        quantity,
                        curr_qty,
                        note,
                        loc_code,
                        com_id)
	VALUES(         
						#{phyDtlCode},
	                    #{phyCode},
	                    #{lot},
	                    #{itemCode},
	                    #{quantity},
	                    #{currQty},
	                    #{note},
	                    #{locCode},
	                    #{comId})
	</insert>
	<!-- 창고 -->
	<select id="physicalWarehouseList" resultType="WarehouseVO" parameterType="String">
		SELECT wh_code, name , type, getsubcode(type) typeName, note
		FROM warehouse
        WHERE com_id = #{comId}
        ORDER BY wh_code DESC
	</select>
	<!-- 품목,위치 -->
	<select id="physicalWarehousedetailList" resultType="WarehouseVO" parameterType="String">
		SELECT st.loc_code, st.item_code, getitemName(st.item_code) itemName, st.quantity, st.lot, st.hold_qty, whl.name, whl.wh_code
		FROM stock st join warehouselocation whl
						on(st.com_id = whl.com_id AND st.loc_code = whl.loc_code)
        WHERE whl.com_id = #{comId} AND whl.wh_code = #{whCode}
        ORDER BY loc_code DESC
	</select>
	<!-- 등록 -->
</mapper>