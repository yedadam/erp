<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadam.inventory.inbound.mapper.InboundMapper">

<!-- 주문입고를 위한 발주서 조회 -->
	<select id="inboundPurchaseFindAll" resultType="PurchaseVO">
			SELECT 
				pod.pur_ord_code,
		        pod.pur_ord_dtl_code,
		        pod.item_code,
                i.name item_name,
		        pod.quantity,
		        pod.status,
		        pod.reccv_date,
		        po.exp_dlv_date,
		        getEmpName(po.emp_id) emp_id,
		        getvdrName(po.vdr_code) vdr_code
               <!-- , p.quantity pquantity,
                pod.quantity - nvl(p.quantity, 0) notStock -->
		FROM purchaseOrderDetail pod join purchaseOrder po
		                               on(pod.pur_ord_code=po.pur_ord_code)
                                     left join purchase p
                                       on(pod.pur_ord_dtl_code = p.pur_ord_dtl_code)
                                     join item i
                                       on(i.item_code = pod.item_code)
		WHERE pod.com_id = 'com-101'
	</select>
	
	<select id="warehouseList" resultType="InboundVO">
		SELECT w.name||' '|| nvl(l.name, ' ') name, l.loc_code locCode
		FROM warehouse w join warehouseLocation l
                   		   on(w.wh_code = l.wh_code)
	</select>
	
	<!-- 입고 처리 -->
	<insert id="purchaseInbound" parameterType="PurchaseVO">
		<selectKey resultType="string" keyProperty="lot" order="BEFORE">
			SELECT 'inlot-' || (NVL(MAX(TO_NUMBER(SUBSTR(lot,7))),100)+1) selectKey, 
			FROM purchase
		</selectKey>
		INSERT INTO purchase
		VALUES (#{lot}, #{itemCode}, #{purOrdDtlCode}, #{empId}, sysdate, #{quantity}, #{currQty}, #{price}, #{status}, #{note}, #{comId}, #{locCode})
	</insert>
	
	<!-- 발주서상태 수정 -->
	<!-- <update id="updateInbound" parameterType="InboundVO">
		UPDATE inbound
		SET 
		WHERE pod.com_id = 'com-101' AND 
	</update> -->
</mapper>