<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dadam.inventory.outbound.mapper.OutboundMapper">
	<!-- 기본 조회 출고리스트 -->
	<select id="selectOutBoundList" resultType="OutboundVO" parameterType="OutboundVO">
		SELECT    out_code
				, code
				, emp_id
				, quantity
				, getempname(emp_id, #{comId}) empName
				, created_date
				, type
				, getsubcode(type) typeName
				, status
				, getsubcode(status) statusName
				, lot
				, note
		FROM outbound
		WHERE com_id = #{comId} AND status NOT IN('obs03')
		ORDER BY out_code DESC
	</select>
	<!-- 등록할떄 사용하는 홀드리스트 -->
	<select id="selectHoldOutboundList" resultType="HoldVO" parameterType="HoldVO">
		SELECT  
				ho.hold_code,
				hod.hold_dtl_code,
				hod.lot,
                ho.code,
		        ho.item_code,
		        getitemName(ho.item_code) itemName,
		        ho.quantity hqty,
		        hod.quantity hdqty,
		        getsubcode(ho.type) typeName,
		        ho.type,
		        getsubCode(hod.status) statusName,
		        hod.status hstatus,
		        ho.status,
		        ho.note,
		        ho.created_date,
                nvl(hod.curr_qty,0) curr_qty
		FROM holddetail hod left join hold ho
                        on(ho.com_id = hod.com_id AND hod.hold_code = ho.hold_code)
		WHERE ho.com_id = #{comId} 
		AND ho.status NOT IN('hs02') AND hod.status NOT IN('hds02')
		ORDER BY hold_dtl_code DESC
	</select>
	<!-- 출고 등록 -->
	<insert id="insertOutbound" parameterType="OutboundVO">
		<selectKey resultType="string" keyProperty="outCode" order="BEFORE">
			SELECT 'out-' || (NVL(MAX(TO_NUMBER(SUBSTR(out_code,5))),100)+1) out_code
			FROM outbound
		</selectKey>
		INSERT INTO outbound(
        out_code,
        code,
        emp_id,
        created_date,
        type,
        status,
        note,
        com_id,
        item_code,
		quantity,
		lot)
		VALUES(#{outCode}, #{code}, #{empId}, sysdate, #{type}, #{status}, #{note}, #{comId},#{itemCode}, #{qty}, #{lot})
	</insert>
	<!-- 출고등록시 출하의뢰 상태값 변경, 출고일자 등록 -->
	<update id="updateOutboundShipRequestDetail" parameterType="OutboundVO">
		UPDATE shiprequestdetail
		SET status = #{shipstatus}
			, dlive_date = sysdate
		WHERE ship_req_dtl_code = #{code} AND com_id = #{comId}
	</update>
	<!-- 홀드 상태 반영 -->
	<update id="updateOutboundHoldStatus" parameterType="OutboundVO">
		UPDATE hold
		SET status = #{holdstatus}
		WHERE hold_code = #{holdCode} AND com_id = #{comId}
	</update>
	<select id="selectOutboundHoldDetailCurrQty" parameterType="OutboundVO" resultType="HoldVO">
		SELECT curr_qty, com_id, hold_dtl_code, quantity
		FROM  holddetail
		WHERE com_id = #{comId} AND hold_dtl_code = #{holdDtlCode}
	</select>
	<!-- 홀드상세 수량 반영 (미출고량)-->
	<update id="updateOutboundHOldDetail" parameterType="OutboundVO">
		UPDATE holddetail
		SET curr_qty = #{holdQty},
			status = #{hdstatus}
		WHERE com_id = #{comId} AND hold_dtl_code = #{holdDtlCode}
	</update>
	<!-- 출고 후 재고 수량 조회 수량제대로넣어야함.-->
	<select id="selectOutboundStock" parameterType="OutboundVO" resultType="HoldVO">
		SELECT hold_qty, quantity, com_id, lot
		FROM stock
		WHERE com_id = #{comId} AND lot = #{lot}
	</select>
	<!-- 출고 후 재고 수량 변경 수량제대로넣어야함.-->
	<update id="updateOutboundStock" parameterType="OutboundVO">
		UPDATE stock
		SET	   	hold_qty = #{holdQty},
				quantity = #{quantity}
		WHERE com_id = #{comId} AND lot = #{lot}
	</update>
	<update id="prcShipRequestStatus" parameterType="OutboundVO">
	{ CALL prc_order_status( #{code, mode=IN, jdbcType=VARCHAR})}
	</update>
</mapper>